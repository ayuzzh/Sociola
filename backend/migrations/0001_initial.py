# Generated by Django 4.0.4 on 2022-05-30 13:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True, max_length=4096)),
                ("likes", models.PositiveIntegerField(default=0)),
                ("dislikes", models.PositiveIntegerField(default=0)),
                (
                    "author",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sub_comments",
                    models.ManyToManyField(blank=True, to="backend.comment"),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64, null=True)),
                ("raw_content", models.TextField(max_length=100000, null=True)),
                ("compiled_content", models.TextField(max_length=150000, null=True)),
                ("time", models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                "verbose_name": "Post",
                "verbose_name_plural": "Post",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64, null=True)),
                ("short_discription", models.CharField(max_length=128, null=True)),
                ("long_discription", models.TextField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "comments_author",
                    models.ManyToManyField(blank=True, to="backend.comment"),
                ),
                (
                    "extracted_topics",
                    models.ManyToManyField(
                        blank=True, related_name="extracted", to="backend.tag"
                    ),
                ),
                (
                    "interested_topics",
                    models.ManyToManyField(related_name="interested", to="backend.tag"),
                ),
                ("posts_list", models.ManyToManyField(blank=True, to="backend.post")),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profile",
            },
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=models.ManyToManyField(to="backend.tag"),
        ),
    ]
